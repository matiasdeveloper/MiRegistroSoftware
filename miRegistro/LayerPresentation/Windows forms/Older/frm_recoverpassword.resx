<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>